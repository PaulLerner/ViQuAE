{
  "trainee": {
    "class_name": "BiEncoder",
    "question_class": "IntermediateLinearFusion",
    "dpr_question_model_name_or_path": "experiments/dpr/triviaqa/checkpoint-13984/question_model",               
    "dpr_context_model_name_or_path": "experiments/dpr/triviaqa/checkpoint-13984/context_model"                  
  },
  "trainer_class": "ICTTrainer",
  "tokenizer": {
    "class_name": "BertTokenizer",
    "pretrained_model_name_or_path": "bert-base-uncased"
  },
  "verbosity": 10,
  "freeze": null,
  "train_dataset": null,
  "eval_dataset": "data/wit_for_mict/test",
  "metric": "retrieval",
  "kb": null,
  "M": 1,
  "n_relevant_passages": 1,
  "search_key": null,
  "prepend_title": true,
  "tokenization_kwargs": {
    "max_length": 256,
    "padding": "longest"
  },
  "checkpoint": {
    "resume_from_checkpoint": "experiments/ict/ilf/checkpoint-15600"
  },
  "callbacks_args": [
    {
      "Class": "EarlyStoppingCallback",
      "early_stopping_patience": 100
    }
  ],
  "training_kwargs": {
    "do_train": false,
    "do_eval": true,
    "do_predict": false,
    "group_by_length": false,
    "output_dir": "experiments/ict/ilf/test",
    "logging_dir": "experiments/ict/ilf/test",
    "evaluation_strategy": "steps",
    "prediction_loss_only": false,
    "per_device_train_batch_size": 32,
    "per_device_eval_batch_size": 1024,
    "gradient_accumulation_steps": 1,
    "eval_accumulation_steps": 1,
    "max_grad_norm": 2.0,
    "num_train_epochs": 10,
    "learning_rate": 2e-05,
    "weight_decay": 0.0,
    "lr_scheduler_type": "linear",
    "warmup_steps": 200,
    "eval_steps": 200,
    "logging_steps": 200,
    "save_steps": 200,
    "logging_strategy": "steps",
    "save_strategy": "steps",
    "dataloader_num_workers": 0,
    "dataloader_pin_memory": true,
    "adam_beta1": 0.9,
    "adam_beta2": 0.999,
    "adam_epsilon": 1e-8,
    "local_rank": -1,
    "ignore_data_skip": true,
    "remove_unused_columns": false,
    "greater_is_better": true,
    "load_best_model_at_end": true,
    "metric_for_best_model": "eval_MRR@N*M",
    "report_to": "tensorboard",
    "label_names": [
      "labels"
    ]
  }
}
